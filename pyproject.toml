
[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
dependencies = [
  "argcomplete",
  "matplotlib",
  "pandas",
  "numpy",
  "mplhep",
  "particle",
  "uproot",
  "black",
  "isort",
  "corner",
  "h5py",
  "emcee",
  "tqdm",
  "IPython",
  "ipykernel",
  "jupyter",
  "mpi4py",     # (mpi has not been well tested, but it has worked before. There was also a linking error if not manually installing it after conda env created)
  "pyarrow",   # storage format
  # "tbb",       # for FSROOT, multiprocessing/threading
  "psutil",    # check process information
  "pdf2image", # convert pdf to image for plotGen tutorial documentation
  "scons",     # needed to 'make' AMPTOOLS_GENERATORS
]
name = "pyamptools"
requires-python = ">=3.9"
version = "0.1.0"

[tool.isort]
known_third_party = "THIRDPARTY,sympy"
profile = "black"

[project.optional-dependencies]
dev = [
  "pyamptools[doc]",
  "pyamptools[ift]",
  "pytest",
  "pre-commit",
  "ruff",
  "pretty_errors",
]
doc = ["jupyter-book", "ghp-import"]
ift = [
  "hydra-core",                # remove later?
  "omegaconf",                 # remove later?
  "optuna",
  "scikit-learn",
  "scipy",
  "jax",
  "jaxlib",
  "plotext",
  "dash",
  "dash_bootstrap_components",
  "plotly",
]

[project.scripts]
pa = "pyamptools.pa:main"

[tool.nbqa.addopts]
black = ["--line-length=85"]

[tool.ruff]
line-length = 300 # Allow long lines, user discretion

[tool.ruff.lint]
ignore = [
  "F821", # Allow undefined names, we use atiSetup to load into globals
  "E701", # Allow multiple statements on one line
  "E741", # Allow ambiguous variable names like 'l', 'O', or 'I'
]
